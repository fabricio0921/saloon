{"version":3,"sources":["index.tsx"],"names":["styles","StyleSheet","create","activeDate","backgroundColor","container","alignItems","flex","marginVertical","paddingVertical","endDate","borderBottomRightRadius","borderTopRightRadius","startDate","borderBottomLeftRadius","borderTopLeftRadius","NonTouchableDay","React","memo","props","isMonthDate","isActive","isOutOfRange","isStartDate","isEndDate","theme","date","isToday","dayContainerStyle","nonTouchableDayContainerStyle","todayContainerStyle","activeDayContainerStyle","dayOutOfRangeContainerStyle","startDateContainerStyle","endDateContainerStyle","color","nonTouchableDayTextStyle","nonTouchableLastMonthDayTextStyle","todayTextStyle","dayOutOfRangeTextStyle","getDate","prevProps","nextProps","isVisible","Day","item","isHidden","onPress","renderDayContent","dayTextStyle","activeDayTextStyle"],"mappings":"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","sourcesContent":["import React, { ComponentType } from 'react';\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\nimport { DayType, ThemeType } from '../../types';\n\nconst styles = StyleSheet.create({\n  activeDate: {\n    backgroundColor: '#3b5998',\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    flex: 1,\n    marginVertical: 5,\n    paddingVertical: 10,\n  },\n  endDate: {\n    borderBottomRightRadius: 60,\n    borderTopRightRadius: 60,\n  },\n  startDate: {\n    borderBottomLeftRadius: 60,\n    borderTopLeftRadius: 60,\n  },\n});\n\ninterface NonTouchableDayProps {\n  date: Date;\n  isActive: boolean;\n  isMonthDate: boolean;\n  isOutOfRange: boolean;\n  isStartDate: boolean;\n  isEndDate: boolean;\n  isVisible: boolean;\n  isToday: boolean;\n  theme: ThemeType;\n}\n\nconst NonTouchableDay = React.memo<NonTouchableDayProps>(\n  (props: NonTouchableDayProps) => {\n    const {\n      isMonthDate,\n      isActive,\n      isOutOfRange,\n      isStartDate,\n      isEndDate,\n      theme,\n      date,\n      isToday,\n    } = props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          theme.nonTouchableDayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isOutOfRange ? theme.dayOutOfRangeContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n        ]}\n      >\n        <Text\n          style={[\n            { color: '#d3d3d3' },\n            theme.nonTouchableDayTextStyle,\n            isMonthDate ? theme.nonTouchableLastMonthDayTextStyle : {},\n            isToday ? theme.todayTextStyle : {},\n            isOutOfRange ? theme.dayOutOfRangeTextStyle : {},\n          ]}\n        >\n          {date.getDate()}\n        </Text>\n      </View>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.isActive === nextProps.isActive &&\n      prevProps.isVisible === nextProps.isVisible &&\n      prevProps.isStartDate === nextProps.isStartDate &&\n      prevProps.isEndDate === nextProps.isEndDate\n    );\n  }\n);\n\ninterface Props {\n  onPress: (date: Date) => void;\n  item: DayType;\n  theme: ThemeType;\n  renderDayContent?: (day: DayType) => ComponentType;\n}\n\nconst Day = React.memo<Props>(\n  (props: Props) => {\n    const {\n      item: {\n        date,\n        isVisible,\n        isActive,\n        isStartDate,\n        isEndDate,\n        isMonthDate,\n        isOutOfRange,\n        isToday,\n        isHidden,\n      },\n      theme,\n    } = props;\n\n    if (isHidden) {\n      return <View style={[styles.container]} />;\n    }\n\n    if (!isVisible) {\n      return (\n        <NonTouchableDay\n          isActive={isActive}\n          date={date}\n          theme={theme}\n          isMonthDate={isMonthDate}\n          isOutOfRange={isOutOfRange}\n          isStartDate={isStartDate}\n          isEndDate={isEndDate}\n          isVisible={isVisible}\n          isToday={isToday}\n        />\n      );\n    }\n\n    return (\n      <TouchableOpacity\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n        ]}\n        onPress={() => props.onPress(props.item.date)}\n      >\n        {props.renderDayContent ? (\n          props.renderDayContent(props.item)\n        ) : (\n          <Text\n            style={[\n              { color: isActive ? 'white' : 'black' },\n              theme.dayTextStyle,\n              isToday ? theme.todayTextStyle : {},\n              isActive ? theme.activeDayTextStyle : {},\n            ]}\n          >\n            {date.getDate()}\n          </Text>\n        )}\n      </TouchableOpacity>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.item.isActive === nextProps.item.isActive &&\n      prevProps.item.isVisible === nextProps.item.isVisible &&\n      prevProps.item.isStartDate === nextProps.item.isStartDate &&\n      prevProps.item.isEndDate === nextProps.item.isEndDate &&\n      prevProps.renderDayContent === nextProps.renderDayContent\n    );\n  }\n);\n\nexport default Day;\n"]}