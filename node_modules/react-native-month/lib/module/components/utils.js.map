{"version":3,"sources":["utils.tsx"],"names":["MONDAY_FIRST","dayShouldBeActive","date","startDate","endDate","firstDayOfMonth","lastDayOfMonth","getMonthDays","month","year","firstDayMonday","disableRange","disabledDays","disableOffsetDays","minDate","maxDate","Date","setHours","firstMonthDay","lastMonthDay","daysToAdd","days","startWeekOffset","getDay","daysToCompleteRows","lastRowNextMonthDays","i","day","getDate","getMonth","fullDay","toString","fullMonth","id","getFullYear","isOnSelectableRange","isOutOfRange","isMonthDate","isStartDate","isEndDate","isActive","today","isToday","push","isVisible","isHidden","areEqual","prevProps","nextProps","locale","Array","isArray","dayNames","showWeekdays"],"mappings":"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","sourcesContent":["import { addDays, getNumberOfDaysInMonth } from '../utils/date';\nimport { changedDate, sameDate } from '../utils/validations';\nimport { MonthProps, DayType } from '../types';\n\nconst MONDAY_FIRST = [6, 0, 1, 2, 3, 4, 5];\n\nfunction dayShouldBeActive(\n  date: Date,\n  startDate: Date,\n  endDate: Date,\n  firstDayOfMonth: Date,\n  lastDayOfMonth: Date\n) {\n  if (date > lastDayOfMonth) {\n    return endDate > lastDayOfMonth && startDate <= lastDayOfMonth;\n  }\n\n  return startDate < firstDayOfMonth && endDate >= firstDayOfMonth;\n}\n\nexport function getMonthDays(\n  month: number,\n  year: number,\n  firstDayMonday: boolean,\n  disableRange: boolean,\n  disabledDays: { [key: string]: any },\n  disableOffsetDays: boolean,\n  startDate?: Date,\n  endDate?: Date,\n  minDate?: Date,\n  maxDate?: Date\n): DayType[] {\n  if (minDate instanceof Date) minDate.setHours(0, 0, 0, 0);\n  if (maxDate instanceof Date) maxDate.setHours(0, 0, 0, 0);\n  if (startDate instanceof Date) startDate.setHours(0, 0, 0, 0);\n  if (endDate instanceof Date) endDate.setHours(0, 0, 0, 0);\n\n  const firstMonthDay = new Date(year, month, 1);\n  const lastMonthDay = new Date(year, month + 1, 0);\n\n  const daysToAdd = getNumberOfDaysInMonth(month, year);\n  const days: DayType[] = [];\n\n  const startWeekOffset = firstDayMonday\n    ? MONDAY_FIRST[firstMonthDay.getDay()]\n    : firstMonthDay.getDay();\n  const daysToCompleteRows = (startWeekOffset + daysToAdd) % 7;\n  const lastRowNextMonthDays = daysToCompleteRows ? 7 - daysToCompleteRows : 0;\n\n  for (let i = -startWeekOffset; i < daysToAdd + lastRowNextMonthDays; i++) {\n    const date: Date = addDays(firstMonthDay, i);\n    const day = date.getDate();\n    const month = date.getMonth();\n    const fullDay = day < 10 ? `0${day}` : day.toString();\n    const fullMonth = month < 10 ? `0${month + 1}` : (month + 1).toString();\n    const id = `${date.getFullYear()}-${fullMonth}-${fullDay}`;\n\n    let isOnSelectableRange = !minDate && !maxDate;\n\n    isOnSelectableRange =\n      (!minDate || (minDate && date >= minDate)) &&\n      (!maxDate || (maxDate && date <= maxDate));\n\n    const isOutOfRange = !!(\n      (minDate && date < minDate) ||\n      (maxDate && date > maxDate)\n    );\n    const isMonthDate = i >= 0 && i < daysToAdd;\n    let isStartDate = false;\n    let isEndDate = false;\n    let isActive = false;\n\n    if (endDate && startDate && !disableRange) {\n      isStartDate = isMonthDate && sameDate(date, startDate);\n      isEndDate = isMonthDate && sameDate(date, endDate);\n\n      if (!isMonthDate) {\n        isActive = dayShouldBeActive(\n          date,\n          startDate,\n          endDate,\n          firstMonthDay,\n          lastMonthDay\n        );\n      } else {\n        isActive = date >= startDate && date <= endDate;\n      }\n    } else if (isMonthDate && startDate && sameDate(date, startDate)) {\n      isStartDate = true;\n      isEndDate = true;\n      isActive = true;\n    }\n\n    const today = new Date();\n    const isToday =\n      day === today.getDate() &&\n      month === today.getMonth() &&\n      year === today.getFullYear();\n\n    days.push({\n      id: `${month}-${id}`,\n      date,\n      isToday,\n      isMonthDate,\n      isActive,\n      isStartDate,\n      isEndDate,\n      isOutOfRange,\n      isVisible:\n        isOnSelectableRange &&\n        isMonthDate &&\n        !disabledDays[`${year}-${fullMonth}-${day}`],\n      isHidden: disableOffsetDays && !isMonthDate,\n    });\n  }\n\n  return days;\n}\n\nexport function areEqual(prevProps: MonthProps, nextProps: MonthProps) {\n  return (\n    prevProps.month === nextProps.month &&\n    prevProps.year === nextProps.year &&\n    prevProps.locale === nextProps.locale &&\n    Array.isArray(prevProps.dayNames) === Array.isArray(nextProps.dayNames) &&\n    prevProps.showWeekdays === nextProps.showWeekdays &&\n    prevProps.disableRange === nextProps.disableRange &&\n    prevProps.disableOffsetDays === nextProps.disableOffsetDays &&\n    prevProps.firstDayMonday === nextProps.firstDayMonday &&\n    !changedDate(prevProps.startDate, nextProps.startDate) &&\n    !changedDate(prevProps.endDate, nextProps.endDate) &&\n    !changedDate(prevProps.minDate, nextProps.minDate) &&\n    !changedDate(prevProps.maxDate, nextProps.maxDate)\n  );\n}\n"]}