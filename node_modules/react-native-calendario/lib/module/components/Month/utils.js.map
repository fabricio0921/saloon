{"version":3,"sources":["utils.tsx"],"names":["moment","monthBetweenRange","month","start","end","firstDayOfMonth","startOf","toDate","lastDayOfMonth","endOf","isMonthDrawn","year","Date","setHours","firstMonthDay","lastMonthDay","getFullYear","getMonth","shouldRenderMonth","currentMonth","pervMinMax","nextMinMax","isSame","monthBetweenMinRange"],"mappings":"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","sourcesContent":["import moment, { Moment } from 'moment';\n\nexport function monthBetweenRange(month: Moment, start: Date, end: Date) {\n  const firstDayOfMonth = month.startOf('month').toDate();\n  const lastDayOfMonth = month.endOf('month').toDate();\n\n  return (\n    (firstDayOfMonth <= end && firstDayOfMonth >= start) ||\n    (lastDayOfMonth >= start && lastDayOfMonth <= end) ||\n    (start <= lastDayOfMonth && end >= firstDayOfMonth)\n  );\n}\n\nexport function isMonthDrawn(\n  year: number,\n  month: number,\n  start?: Date,\n  end?: Date\n) {\n  if (start instanceof Date) {\n    start.setHours(0, 0, 0, 0);\n    if (end instanceof Date) {\n      end.setHours(0, 0, 0, 0);\n      const firstMonthDay = new Date(year, month, 0, 0, 0, 0, 0);\n      const lastMonthDay = new Date(year, month + 1, 0);\n\n      return (\n        (firstMonthDay <= end && firstMonthDay >= start) ||\n        (lastMonthDay >= start && lastMonthDay <= end) ||\n        (start <= lastMonthDay && end >= firstMonthDay)\n      );\n    }\n\n    return start.getFullYear() === year && start.getMonth() === month;\n  }\n\n  return false;\n}\n\nexport function shouldRenderMonth(\n  currentMonth: Moment,\n  pervMinMax?: Date,\n  nextMinMax?: Date\n) {\n  if (pervMinMax !== nextMinMax) {\n    if (pervMinMax) {\n      if (nextMinMax) {\n        if (\n          moment(pervMinMax).isSame(currentMonth, 'month') ||\n          moment(nextMinMax).isSame(currentMonth, 'month')\n        ) {\n          return true;\n        }\n\n        const monthBetweenMinRange =\n          pervMinMax < nextMinMax\n            ? monthBetweenRange(\n                currentMonth,\n                moment(pervMinMax).toDate(),\n                moment(nextMinMax).toDate()\n              )\n            : monthBetweenRange(\n                currentMonth,\n                moment(nextMinMax).toDate(),\n                moment(pervMinMax).toDate()\n              );\n\n        if (monthBetweenMinRange) {\n          return true;\n        }\n      } else if (moment(pervMinMax).isSame(currentMonth, 'month')) {\n        return true;\n      }\n    } else if (moment(nextMinMax).isSame(currentMonth, 'month')) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"]}