{"version":3,"sources":["index.tsx"],"names":["SHOULD_NOT_UPDATE","EmptyMonth","React","memo","props","height","justifyContent","alignItems","theme","emptyMonthContainerStyle","fontSize","fontWeight","emptyMonthTextStyle","name","MonthTitle","textAlign","paddingVertical","monthTitleTextStyle","month","year","minDate","maxDate","showMonthTitle","monthNames","locale","index","MONTH_NAMES","Array","isArray","length","monthName","firstViewableIndex","viewableRangeOffset","lastViewableIndex","min","Date","toDate","undefined","max","disabledDays","disableOffsetDays","disableRange","startDate","endDate","firstDayMonday","onPress","renderDayContent","showWeekdays","dayNames","prevProps","nextProps","currentMonth","firstMonthToRender","add","isSame","startDateChanged","endDateChanged"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport { Month, MonthProps } from 'react-native-month';\nimport moment from 'moment';\nimport { isValidDate, getMonthNames, isSameDate } from '../../utils/date';\nimport { shouldRenderMonth, isMonthDrawn } from './utils';\nimport { ThemeType } from '../../types';\n\ninterface EmptyMonthProps {\n  height: number;\n  name: string;\n  theme: ThemeType;\n}\n\nconst SHOULD_NOT_UPDATE = true;\n\nconst EmptyMonth = React.memo<EmptyMonthProps>(\n  (props: EmptyMonthProps) => (\n    <View\n      style={[\n        {\n          height: props.height,\n          justifyContent: 'center',\n          alignItems: 'center',\n        },\n        props.theme.emptyMonthContainerStyle,\n      ]}\n    >\n      <Text\n        style={[\n          { fontSize: 25, fontWeight: '300' },\n          props.theme.emptyMonthTextStyle,\n        ]}\n        allowFontScaling={false}\n      >\n        {props.name}\n      </Text>\n    </View>\n  ),\n  () => SHOULD_NOT_UPDATE\n);\n\ninterface MonthTitleProps {\n  name: string;\n  theme: ThemeType;\n}\n\nconst MonthTitle = React.memo<MonthTitleProps>(\n  (props: MonthTitleProps) => (\n    <Text\n      allowFontScaling={false}\n      style={[\n        { textAlign: 'center', paddingVertical: 10 },\n        props.theme.monthTitleTextStyle,\n      ]}\n    >\n      {props.name}\n    </Text>\n  ),\n  () => SHOULD_NOT_UPDATE\n);\n\ninterface Props extends MonthProps {\n  monthNames: string[];\n  // eslint-disable-next-line react/no-unused-prop-types\n  firstMonthToRender: Date;\n  firstViewableIndex: number;\n  lastViewableIndex: number;\n  viewableRangeOffset: number;\n  showMonthTitle: boolean;\n  height: number;\n  index: number;\n}\n\nexport default React.memo<Props>(\n  (props: Props) => {\n    const {\n      month,\n      year,\n      minDate,\n      maxDate,\n      showMonthTitle,\n      monthNames,\n      theme = {},\n      height,\n      locale,\n      index,\n    } = props;\n\n    const MONTH_NAMES =\n      Array.isArray(monthNames) && monthNames.length === 12\n        ? monthNames\n        : getMonthNames(locale);\n    const monthName = `${MONTH_NAMES[month]} ${year}`;\n\n    if (\n      index < props.firstViewableIndex - props.viewableRangeOffset ||\n      index > props.lastViewableIndex\n    ) {\n      return <EmptyMonth name={monthName} height={height} theme={theme} />;\n    }\n\n    const min =\n      minDate && isValidDate(new Date(minDate))\n        ? moment(minDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n    const max =\n      maxDate && isValidDate(new Date(maxDate))\n        ? moment(maxDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n\n    return (\n      <View style={{ height }}>\n        {showMonthTitle && <MonthTitle name={monthName} theme={theme} />}\n        <Month\n          month={month}\n          year={year}\n          disabledDays={props.disabledDays}\n          disableOffsetDays={props.disableOffsetDays}\n          disableRange={props.disableRange}\n          startDate={props.startDate}\n          endDate={props.endDate}\n          firstDayMonday={props.firstDayMonday}\n          locale={props.locale}\n          maxDate={max}\n          minDate={min}\n          onPress={props.onPress}\n          renderDayContent={props.renderDayContent}\n          showWeekdays={props.showWeekdays}\n          theme={props.theme}\n          dayNames={props.dayNames}\n        />\n      </View>\n    );\n  },\n  (prevProps: Props, nextProps: Props) => {\n    if (prevProps.disableRange !== nextProps.disableRange) {\n      return false;\n    }\n\n    if (\n      (prevProps.index <\n        prevProps.firstViewableIndex - prevProps.viewableRangeOffset ||\n        prevProps.index > prevProps.lastViewableIndex) &&\n      nextProps.index >= nextProps.firstViewableIndex &&\n      nextProps.index <= nextProps.lastViewableIndex\n    ) {\n      return false;\n    }\n\n    if (\n      (!nextProps.dayNames || !nextProps.monthNames) &&\n      prevProps.locale !== nextProps.locale\n    ) {\n      return false;\n    }\n\n    const currentMonth = moment(nextProps.firstMonthToRender).add(\n      nextProps.index,\n      'months'\n    );\n\n    if (prevProps.disableRange === nextProps.disableRange) {\n      if (nextProps.disableRange) {\n        if (prevProps.startDate !== nextProps.startDate) {\n          if (\n            !prevProps.startDate &&\n            moment(nextProps.startDate).isSame(currentMonth, 'month')\n          ) {\n            return false;\n          }\n\n          if (\n            prevProps.startDate &&\n            (moment(prevProps.startDate).isSame(currentMonth, 'month') ||\n              moment(nextProps.startDate).isSame(currentMonth, 'month'))\n          ) {\n            return false;\n          }\n        }\n      } else {\n        const startDateChanged =\n          (prevProps.startDate instanceof Date &&\n            nextProps.startDate instanceof Date &&\n            !isSameDate(prevProps.startDate, nextProps.startDate)) ||\n          prevProps.startDate !== nextProps.startDate;\n        const endDateChanged =\n          (prevProps.endDate instanceof Date &&\n            nextProps.endDate instanceof Date &&\n            !isSameDate(prevProps.endDate, nextProps.endDate)) ||\n          prevProps.endDate !== nextProps.endDate;\n\n        if (startDateChanged || endDateChanged) {\n          if (\n            isMonthDrawn(\n              currentMonth.year(),\n              currentMonth.month(),\n              prevProps.startDate,\n              prevProps.endDate\n            ) !==\n              isMonthDrawn(\n                currentMonth.year(),\n                currentMonth.month(),\n                nextProps.startDate,\n                nextProps.endDate\n              ) ||\n            (prevProps.startDate instanceof Date &&\n              moment(prevProps.startDate).isSame(currentMonth, 'month') &&\n              (startDateChanged || endDateChanged)) ||\n            (nextProps.startDate instanceof Date &&\n              moment(nextProps.startDate).isSame(currentMonth, 'month') &&\n              startDateChanged) ||\n            (prevProps.endDate instanceof Date &&\n              moment(prevProps.endDate).isSame(currentMonth, 'month') &&\n              endDateChanged) ||\n            (nextProps.endDate instanceof Date &&\n              moment(nextProps.endDate).isSame(currentMonth, 'month') &&\n              endDateChanged)\n          ) {\n            return false;\n          }\n        }\n      }\n    } else {\n      return false;\n    }\n\n    if (\n      shouldRenderMonth(currentMonth, prevProps.minDate, nextProps.minDate) ||\n      shouldRenderMonth(currentMonth, prevProps.maxDate, nextProps.maxDate)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n);\n"]}