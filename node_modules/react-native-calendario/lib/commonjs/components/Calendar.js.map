{"version":3,"sources":["Calendar.tsx"],"names":["NUMBER_OF_MONTHS","MONTH_HEIGHT","INITIAL_LIST_SIZE","VIEWABLE_RANGE_OFFSET","VIEWABILITY_CONFIG","waitForInteraction","itemVisiblePercentThreshold","minimumViewTime","Calendar","React","Component","constructor","props","_data","index","length","monthHeight","offset","_item","String","info","viewableItemsChanged","viewableItems","firstViewableItem","l","lastViewableItem","firstViewableIndex","lastViewableIndex","state","setState","date","startDate","endDate","newStartDate","newEndDate","disableRange","undefined","newRange","onChange","ref","listReference","calendarListRef","months","firstMonthToRender","numberOfMonths","firstMonth","lastMonth","clone","add","toDate","endOf","monthIndex","diff","month","year","monthNames","handlePressDay","theme","showWeekdays","showMonthTitle","locale","dayNames","firstDayMonday","renderDayContent","minDate","maxDate","disabledDays","disableOffsetDays","viewableRangeOffset","Date","initialScrollIndex","UNSAFE_componentWillMount","startingMonth","start","end","Array","firstMonthIndex","getMonthIndex","UNSAFE_componentWillReceiveProps","nextProps","nextStartDate","scrollToIndex","shouldComponentUpdate","nextState","render","getItemLayout","handleViewableItemsChange","initialListSize","keyExtractor","renderMonth","setReference","format"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FlatList } from 'react-native';\nimport moment from 'moment';\n\nimport Month from './Month';\nimport { isValidDate } from '../utils/date';\nimport { CalendarProps, ViewableItemsType } from '../types';\n\ninterface State {\n  firstMonthToRender: Date;\n  months: any[];\n  firstViewableIndex: number;\n  lastViewableIndex: number;\n  initialScrollIndex: number;\n  startDate?: Date;\n  endDate?: Date;\n}\n\nconst NUMBER_OF_MONTHS = 12;\nconst MONTH_HEIGHT = 370;\nconst INITIAL_LIST_SIZE = 2;\nconst VIEWABLE_RANGE_OFFSET = 5;\n\nconst VIEWABILITY_CONFIG = {\n  waitForInteraction: true,\n  itemVisiblePercentThreshold: 10,\n  minimumViewTime: 32,\n};\n\nexport default class Calendar extends React.Component<CalendarProps, State> {\n  static defaultProps = {\n    numberOfMonths: NUMBER_OF_MONTHS,\n    startingMonth: moment().format('YYYY-MM-DD'),\n    initialListSize: INITIAL_LIST_SIZE,\n    showWeekdays: true,\n    showMonthTitle: true,\n    theme: {},\n    locale: 'en',\n    monthNames: [],\n    dayNames: [],\n    disableRange: false,\n    firstDayMonday: false,\n    monthHeight: MONTH_HEIGHT,\n    disableOffsetDays: false,\n    viewableRangeOffset: VIEWABLE_RANGE_OFFSET,\n  };\n\n  constructor(props: CalendarProps) {\n    super(props);\n\n    this.state = {\n      firstMonthToRender: new Date(),\n      months: [],\n      initialScrollIndex: 0,\n      startDate: undefined,\n      endDate: undefined,\n      firstViewableIndex: 0,\n      lastViewableIndex: INITIAL_LIST_SIZE + props.viewableRangeOffset!,\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const { numberOfMonths, startingMonth, startDate, endDate } = this.props;\n    let { firstMonthToRender } = this.state;\n\n    if (startingMonth && isValidDate(new Date(startingMonth))) {\n      firstMonthToRender = moment(startingMonth, 'YYYY-MM-DD').toDate();\n    }\n\n    let start: Date | undefined;\n\n    if (startDate && isValidDate(new Date(startDate))) {\n      start = moment(startDate, 'YYYY-MM-DD').toDate();\n\n      if (\n        start >\n        moment(firstMonthToRender).add(numberOfMonths, 'months').toDate()\n      ) {\n        start = undefined;\n      }\n    }\n\n    const end =\n      endDate && isValidDate(new Date(endDate))\n        ? moment(endDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n\n    const months = new Array(numberOfMonths);\n\n    let firstMonthIndex = 0;\n\n    if (start) {\n      const monthIndex = this.getMonthIndex(start, months, firstMonthToRender);\n      if (monthIndex !== null) {\n        firstMonthIndex = monthIndex;\n      }\n    }\n\n    this.setState({\n      firstMonthToRender,\n      initialScrollIndex: firstMonthIndex,\n      months,\n      startDate: start,\n      endDate: end,\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: CalendarProps) {\n    const { startDate, months, firstMonthToRender } = this.state;\n    const nextStartDate =\n      nextProps.startDate && nextProps.startDate instanceof Date\n        ? nextProps.startDate\n        : undefined;\n    const endDate =\n      nextProps.endDate && nextProps.endDate instanceof Date\n        ? nextProps.endDate\n        : undefined;\n\n    if (startDate !== nextStartDate || this.state.endDate !== endDate) {\n      this.setState(\n        {\n          startDate: nextStartDate,\n          endDate,\n        },\n        () => {\n          if (\n            this.listReference &&\n            nextStartDate &&\n            startDate !== nextStartDate\n          ) {\n            const monthIndex = this.getMonthIndex(\n              nextStartDate,\n              months,\n              firstMonthToRender\n            );\n            if (monthIndex !== null) {\n              this.listReference.scrollToIndex({ index: monthIndex });\n            }\n          }\n        }\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: CalendarProps, nextState: State): boolean {\n    return (\n      this.state.months.length !== nextState.months.length ||\n      this.state.startDate !== nextState.startDate ||\n      this.state.firstViewableIndex !== nextState.firstViewableIndex ||\n      this.state.lastViewableIndex !== nextState.lastViewableIndex ||\n      this.state.endDate !== nextState.endDate ||\n      this.props.minDate !== nextProps.minDate ||\n      this.props.maxDate !== nextProps.maxDate ||\n      this.props.startingMonth !== nextProps.startingMonth ||\n      this.props.renderDayContent !== nextProps.renderDayContent\n    );\n  }\n\n  private listReference?: FlatList<any> | null | undefined;\n\n  getItemLayout = (\n    _data: any,\n    index: number\n  ): { length: number; offset: number; index: number } => ({\n    length: this.props.monthHeight,\n    offset: this.props.monthHeight * index,\n    index,\n  });\n\n  keyExtractor = (_item: any, index: number): string => String(index);\n\n  handleViewableItemsChange = (info: ViewableItemsType) => {\n    if (this.props.viewableItemsChanged) {\n      this.props.viewableItemsChanged(info);\n    }\n\n    const { viewableItems } = info;\n\n    if (viewableItems.length > 0) {\n      const {\n        0: firstViewableItem,\n        length: l,\n        [l - 1]: lastViewableItem,\n      } = viewableItems;\n\n      const { firstViewableIndex, lastViewableIndex } = this.state;\n      if (\n        firstViewableIndex !== firstViewableItem.index ||\n        lastViewableIndex !== lastViewableItem.index\n      ) {\n        this.setState({\n          firstViewableIndex: firstViewableItem.index!,\n          lastViewableIndex: lastViewableItem.index! + VIEWABLE_RANGE_OFFSET,\n        });\n      }\n    }\n  };\n\n  handlePressDay = (date: Date) => {\n    const { startDate, endDate } = this.state;\n    let newStartDate;\n    let newEndDate;\n\n    if (this.props.disableRange) {\n      newStartDate = date;\n      newEndDate = undefined;\n    } else if (startDate) {\n      if (endDate) {\n        newStartDate = date;\n        newEndDate = undefined;\n      } else if (date < startDate!) {\n        newStartDate = date;\n      } else if (date > startDate!) {\n        newStartDate = startDate;\n        newEndDate = date;\n      } else {\n        newStartDate = date;\n        newEndDate = date;\n      }\n    } else {\n      newStartDate = date;\n    }\n\n    const newRange = {\n      startDate: newStartDate as Date,\n      endDate: newEndDate,\n    };\n\n    this.setState(newRange, () => this.props.onChange(newRange));\n  };\n\n  setReference = (ref: any) => {\n    if (ref) {\n      this.listReference = ref;\n      if (this.props.calendarListRef) {\n        this.props.calendarListRef(ref);\n      }\n    }\n  };\n\n  getMonthIndex = (date: Date, months: any[], firstMonthToRender: Date) => {\n    const { numberOfMonths } = this.props;\n\n    const firstMonth = moment(firstMonthToRender);\n    const lastMonth = firstMonth.clone().add(numberOfMonths, 'months');\n\n    if (\n      date >= firstMonth.toDate() &&\n      date <= lastMonth.endOf('month').toDate()\n    ) {\n      const monthIndex = moment(date).diff(firstMonth, 'months');\n\n      if (monthIndex >= 0 && monthIndex <= months.length) {\n        return monthIndex;\n      }\n    }\n\n    return null;\n  };\n\n  renderMonth = ({ index }: { index: number }) => {\n    const { firstMonthToRender } = this.state;\n    const month = moment(firstMonthToRender).add(index, 'months');\n\n    return (\n      <Month\n        month={month.month()}\n        year={month.year()}\n        index={index}\n        firstMonthToRender={this.state.firstMonthToRender}\n        monthNames={this.props.monthNames}\n        onPress={this.handlePressDay}\n        theme={this.props.theme}\n        showWeekdays={this.props.showWeekdays}\n        showMonthTitle={this.props.showMonthTitle}\n        locale={this.props.locale}\n        dayNames={this.props.dayNames}\n        height={this.props.monthHeight}\n        firstDayMonday={this.props.firstDayMonday}\n        renderDayContent={this.props.renderDayContent}\n        minDate={this.props.minDate}\n        maxDate={this.props.maxDate}\n        startDate={this.state.startDate}\n        endDate={this.state.endDate}\n        disableRange={this.props.disableRange}\n        disabledDays={this.props.disabledDays}\n        disableOffsetDays={this.props.disableOffsetDays}\n        firstViewableIndex={this.state.firstViewableIndex}\n        lastViewableIndex={this.state.lastViewableIndex}\n        viewableRangeOffset={this.props.viewableRangeOffset!}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <FlatList\n        getItemLayout={this.getItemLayout}\n        initialScrollIndex={this.state.initialScrollIndex}\n        viewabilityConfig={VIEWABILITY_CONFIG}\n        removeClippedSubviews\n        onViewableItemsChanged={this.handleViewableItemsChange}\n        initialNumToRender={this.props.initialListSize}\n        keyExtractor={this.keyExtractor}\n        renderItem={this.renderMonth}\n        extraData={{\n          ...this.state,\n          minDate: this.props.minDate,\n          maxDate: this.props.maxDate,\n        }}\n        data={this.state.months}\n        ref={this.setReference}\n      />\n    );\n  }\n}\n"]}